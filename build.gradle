plugins {
    id 'groovy'
    id 'com.gradle.plugin-publish' version '0.9.7'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.github.fge:json-schema-validator:2.2.6'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.2.3'

    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:3.2.10'
}

group = 'org.hidetake'
version = System.getenv('CIRCLE_TAG') ?: 'SNAPSHOT'

pluginBundle {
    website = 'https://github.com/int128/gradle-swagger-generator-plugin'
    vcsUrl = 'https://github.com/int128/gradle-swagger-generator-plugin'
    description = 'Gradle Swagger Generator Plugin'
    tags = ['swagger', 'api', 'generator']

    plugins {
        swaggerPlugin {
            id = 'org.hidetake.swagger.generator'
            displayName = 'Gradle Swagger Generator Plugin'
        }
    }
}

allprojects {
    afterEvaluate {
        tasks.withType(Test) {
            finalizedBy ':testReport'
            testReport.reportOn binResultsDir
            reports.html.enabled = false
            reports.junitXml.destination = file("${rootProject.buildDir}/test-results")
        }
    }
}

task testReport(type: TestReport) {
    description 'Generates test report for all projects'
    destinationDir = file("$buildDir/reports")
}
